{"version":3,"sources":["student-list.js","templates/calcudoku.js","templates/logic.js","templates/light.js","puzzle-display.js","index.js"],"names":["StudentList","props","students","useState","displayedStudents","setDisplayedStudents","className","RefreshButton","type","placeholder","onChange","event","query","target","value","split","filteredStudents","filter","first","last","every","pattern","regexp","RegExp","match","map","renderStudent","bind","setStudents","fetchStudentList","a","listurl","process","fetch","headers","authorization","response","ok","json","list","student","find","console","log","status","onClick","active","capitalize","name","id","defaultChecked","string","replace","char","toUpperCase","Calcudoku","data","size","grid","puzzleData","cages","work","Array","fill","index","col","Math","floor","row","matchSquare","squareMatcher","entry","cage","squares","neighbors","neighborList","isTopLeft","square","result","operation","generateGrid","renderSquare","classList","join","disabled","directions","dir","push","Logic","description","Light","workPosition","setWorkPosition","cols","rows","beginstate","neighborType","activatedNeighbors","slice","some","isactive","length","jumpTo","position","JumpBack","jump","StepBack","step","max","StepForward","min","JumpForward","xmlns","width","height","viewBox","toString","d","puzzleComponents","calcudoku","logic","light","fetchDefaults","activepuzzle","puzzleName","puzzleId","PuzzleDisplay","Map","setPuzzleData","fetchInfo","setFetchInfo","studentHistory","setStudentHistory","completedLists","setCompletedLists","activeStudents","useMemo","useEffect","oldFetchInfo","newFetchInfo","forEach","has","set","fetchStudentPuzzleData","useCallback","get","puzzleuri","url","fetchStudentCompletedList","setCompleted","completed","method","body","JSON","stringify","updateHistory","oldHistory","puzzleHistory","instanceHistory","timestamp","Date","now","newHistory","refresh","Promise","all","dataUpdates","completionUpdates","oldPuzzleData","newPuzzleData","oldCompletedLists","newCompletedLists","refreshInterval","setInterval","clearInterval","setStudentFetchInfo","key","info","puzzleDirectory","renderStudentPuzzle","render","renderHistory","history","sortedHistory","Object","keys","flatMap","instanceKey","sort","e","parse","time","toLocaleTimeString","renderPuzzleSelect","directory","displayedData","completedList","ids","hasRecentActivity","puzzleInfo","checked","instance","from","i","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a651183.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function StudentList(props) {\n\tconst { students } = props;\n\tconst [displayedStudents, setDisplayedStudents] = useState(students);\n\tconst filter = (event) => {\n\t\tconst query = event.target.value.split(\" \");\n\t\tconst filteredStudents = students.filter(({ first, last }) =>\n\t\t\tquery.every((pattern) => {\n\t\t\t\tconst regexp = new RegExp(pattern, \"i\");\n\t\t\t\treturn first.match(regexp) || last.match(regexp);\n\t\t\t})\n\t\t);\n\t\tsetDisplayedStudents(filteredStudents);\n\t};\n\treturn (\n\t\t<div className=\"student-list-container\">\n\t\t\t<RefreshButton\n\t\t\t\t{...props}\n\t\t\t\tsetDisplayedStudents={setDisplayedStudents}\n\t\t\t/>\n\t\t\t<input type=\"text\" placeholder=\"Filter\" onChange={filter} />\n\t\t\t<ul className=\"student-list\">\n\t\t\t\t{displayedStudents.map(renderStudent.bind(null, props))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction RefreshButton({ students, setStudents, setDisplayedStudents }) {\n\tconst fetchStudentList = async () => {\n\t\tconst listurl = `${process.env.REACT_APP_API_URL}/students`;\n\t\tconst response = await fetch(listurl, {\n\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t});\n\t\tif (response.ok) {\n\t\t\ttry {\n\t\t\t\tlet list = (await response.json()).map((student) => {\n\t\t\t\t\tconst studentMatch = students.find(\n\t\t\t\t\t\t({ first, last }) =>\n\t\t\t\t\t\t\tfirst === student.first && last === student.last\n\t\t\t\t\t);\n\t\t\t\t\treturn studentMatch || student;\n\t\t\t\t});\n\t\t\t\tsetStudents(list);\n\t\t\t\tsetDisplayedStudents(list);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t} else console.log(\"HTTP error, status = \" + response.status);\n\t};\n\treturn (\n\t\t<button className=\"refresh-students\" onClick={fetchStudentList}>\n\t\t\tRefresh\n\t\t</button>\n\t);\n}\n\nfunction renderStudent({ students, setStudents }, student) {\n\tconst { first, last, active } = student;\n\treturn (\n\t\t<li key={`${first} ${last}`}>\n\t\t\t{capitalize(first)} {capitalize(last)}{\" \"}\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"active\"\n\t\t\t\tid={`${first}_${last}-active`}\n\t\t\t\tdefaultChecked={active ? true : false}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tstudent.active = !active;\n\t\t\t\t\tsetStudents([...students]);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</li>\n\t);\n}\n\nfunction capitalize(string) {\n\treturn string.replace(/^./, (char) => char.toUpperCase());\n}\n","import React from \"react\";\n\nexport default function Calcudoku({ data }) {\n\tconst { size } = data;\n\tconst grid = generateGrid(data);\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"puzzle-container\" size={size}>\n\t\t\t\t<div className=\"grid-container\" size={size}>\n\t\t\t\t\t{grid.map(renderSquare)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction renderSquare(square) {\n\tconst classList = \"calcudoku-square \" + square.neighbors.join(\" \");\n\treturn (\n\t\t<div className={classList}>\n\t\t\t<div className=\"cage-indicator\">\n\t\t\t\t{square.result}\n\t\t\t\t{square.operation}\n\t\t\t</div>\n\t\t\t<input type=\"number\" value={square.value || \"\"} disabled />\n\t\t</div>\n\t);\n}\n\nfunction generateGrid(puzzleData) {\n\tconst { size, cages, work } = puzzleData;\n\tconst squares = Array(size ** 2).fill(null);\n\treturn squares.map((...[, index]) => {\n\t\tconst col = Math.floor(index / size);\n\t\tconst row = index % size;\n\t\tconst matchSquare = squareMatcher({ col, row });\n\t\tconst entry = work.find(matchSquare);\n\t\tconst cage = cages.find((cage) => cage.squares.find(matchSquare));\n\t\tconst neighbors = neighborList({ col, row }, cage);\n\t\tconst isTopLeft = cage.squares.every(\n\t\t\t(square) =>\n\t\t\t\tsquare.col >= col && (square.row >= row || square.col > col)\n\t\t);\n\t\tconst result = isTopLeft ? cage.result : null;\n\t\tconst operation = isTopLeft ? cage.operation : null;\n\t\tconst value = entry ? entry.value : null;\n\t\treturn { col, row, value, neighbors, result, operation };\n\t});\n}\n\nfunction neighborList(square, cage) {\n\tconst neighbors = [];\n\tconst directions = {\n\t\t\"n-up\": { col: square.col - 1, row: square.row },\n\t\t\"n-down\": { col: square.col + 1, row: square.row },\n\t\t\"n-left\": { col: square.col, row: square.row - 1 },\n\t\t\"n-right\": { col: square.col, row: square.row + 1 },\n\t};\n\n\tfor (let dir in directions) {\n\t\tconst matchSquare = squareMatcher(directions[dir]);\n\t\tif (cage.squares.find(matchSquare)) {\n\t\t\tneighbors.push(dir);\n\t\t}\n\t}\n\n\treturn neighbors;\n}\n\nfunction squareMatcher({ col, row }) {\n\treturn (square) => square.col === col && square.row === row;\n}\n","import React from \"react\";\n\nexport default function Logic({ data: { description, work } }) {\n\treturn (\n\t\t<div className=\"logic\">\n\t\t\t<p className=\"description\">{description}</p>\n\t\t\t<p className=\"work\">{work}</p>\n\t\t</div>\n\t);\n}\n","import React, { useState } from \"react\";\n\nexport default function Light({ data }) {\n\tconst { work } = data;\n\tconst [workPosition, setWorkPosition] = useState(data.workPosition || 0);\n\tconst {\n\t\tsize: { cols, rows },\n\t\tbeginstate,\n\t\tneighborType,\n\t} = data;\n\n\tconst neighborList = ({ row, col }) => {\n\t\tswitch (neighborType) {\n\t\t\tcase \"x\":\n\t\t\t\treturn [\n\t\t\t\t\t{ row: row - 1, col: col - 1 },\n\t\t\t\t\t{ row: row + 1, col: col + 1 },\n\t\t\t\t\t{ row: row + 1, col: col - 1 },\n\t\t\t\t\t{ row: row - 1, col: col + 1 },\n\t\t\t\t\t{ row, col },\n\t\t\t\t];\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{ row: row - 1, col },\n\t\t\t\t\t{ row: row + 1, col },\n\t\t\t\t\t{ row, col: col - 1 },\n\t\t\t\t\t{ row, col: col + 1 },\n\t\t\t\t\t{ row, col },\n\t\t\t\t];\n\t\t}\n\t};\n\n\tconst renderSquare = (row, ...[, col]) => {\n\t\tconst neighbors = neighborList({ row, col });\n\t\tconst activatedNeighbors = work\n\t\t\t.slice(0, workPosition)\n\t\t\t.filter((square) => neighbors.some(squareMatcher(square)));\n\t\tconst isactive =\n\t\t\t(activatedNeighbors.length +\n\t\t\t\t(beginstate.some(squareMatcher({ row, col })) ? 1 : 0)) %\n\t\t\t\t2 >\n\t\t\t0;\n\t\tconst classList = `light-square ${isactive ? \"active\" : \"inactive\"}`;\n\t\treturn <div className={classList} />;\n\t};\n\n\tconst renderRow = (...[, index]) => {\n\t\treturn (\n\t\t\t<div className=\"grid-row\">\n\t\t\t\t{Array(cols).fill(null).map(renderSquare.bind(null, index))}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst jumpTo = (position) => setWorkPosition(position);\n\n\treturn (\n\t\t<div className=\"light-puzzle-container\">\n\t\t\t<div className=\"light-grid\" cols={cols} rows={rows}>\n\t\t\t\t{new Array(rows).fill(null).map(renderRow)}\n\t\t\t</div>\n\t\t\t<div className=\"controller\">\n\t\t\t\t<JumpBack jump={() => jumpTo(0)} isactive={workPosition > 0} />\n\t\t\t\t<StepBack\n\t\t\t\t\tstep={() => jumpTo(Math.max(workPosition - 1, 0))}\n\t\t\t\t\tisactive={workPosition > 0}\n\t\t\t\t/>\n\t\t\t\t<StepForward\n\t\t\t\t\tstep={() => jumpTo(Math.min(workPosition + 1, work.length))}\n\t\t\t\t\tisactive={workPosition < work.length}\n\t\t\t\t/>\n\t\t\t\t<JumpForward\n\t\t\t\t\tjump={() => jumpTo(work.length)}\n\t\t\t\t\tisactive={workPosition < work.length}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction squareMatcher({ row, col }) {\n\treturn (square) => square.col === col && square.row === row;\n}\n\nfunction StepBack({ step, isactive }) {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"2048\"\n\t\t\theight=\"2048\"\n\t\t\tviewBox=\"0 0 2048 2048\"\n\t\t\tonClick={step}\n\t\t\tclassName=\"step back nav-button\"\n\t\t\tisactive={isactive.toString()}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M1344 576v896q0 26-19 45t-45\n\t\t\t\t19-45-19l-448-448q-19-19-19-45t19-45l448-448q19-19 45-19t45 19\n\t\t\t\t19 45z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n\nfunction JumpBack({ jump, isactive }) {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"2048\"\n\t\t\theight=\"2048\"\n\t\t\tviewBox=\"0 0 2048 2048\"\n\t\t\tonClick={jump}\n\t\t\tclassName=\"jump back nav-button\"\n\t\t\tisactive={isactive.toString()}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M1811 269q19-19 32-13t13 32v1472q0 \n\t\t\t26-13 32t-32-13l-710-710q-8-9-13-19v710q0 \n\t\t\t26-13 32t-32-13l-710-710q-19-19-19-45t19-45l710-710q19-19 \n\t\t\t32-13t13 32v710q5-11 13-19z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n\nfunction StepForward({ step, isactive }) {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"2048\"\n\t\t\theight=\"2048\"\n\t\t\tviewBox=\"0 0 2048 2048\"\n\t\t\tonClick={step}\n\t\t\tclassName=\"step forward nav-button\"\n\t\t\tisactive={isactive.toString()}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M1280 1024q0 26-19 45l-448 448q-19 19-45 \n\t\t\t\t19t-45-19-19-45v-896q0-26 19-45t45-19 45 \n\t\t\t\t19l448 448q19 19 19 45z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n\nfunction JumpForward({ jump, isactive }) {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"2048\"\n\t\t\theight=\"2048\"\n\t\t\tviewBox=\"0 0 2048 2048\"\n\t\t\tonClick={jump}\n\t\t\tclassName=\"jump forward nav-button\"\n\t\t\tisactive={isactive.toString()}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M237 1779q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 \n\t\t\t\t710q8 8 13 19v-710q0-26 13-32t32 13l710 710q19 19 19 45t-19 \n\t\t\t\t45l-710 710q-19 19-32 13t-13-32v-710q-5 10-13 19z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\n\nimport Calcudoku from \"./templates/calcudoku\";\nimport Logic from \"./templates/logic\";\nimport Light from \"./templates/light\";\n\nconst puzzleComponents = {\n\tcalcudoku: (data) => <Calcudoku data={data} />,\n\tlogic: (data) => <Logic data={data} />,\n\tlight: (data) => <Light data={data} />,\n};\n\nconst fetchDefaults = {\n\tactivepuzzle: true,\n\tpuzzleName: \"calcudoku\",\n\tpuzzleId: \"4x4beginner1\",\n};\n\nexport default function PuzzleDisplay(props) {\n\tconst [puzzleData, setPuzzleData] = useState(new Map());\n\tconst [fetchInfo, setFetchInfo] = useState(new Map());\n\tconst [studentHistory, setStudentHistory] = useState(new Map());\n\tconst [completedLists, setCompletedLists] = useState(new Map());\n\tconst activeStudents = useMemo(\n\t\t() => props.students.filter((student) => student.active),\n\t\t[props.students]\n\t);\n\n\t//set defaults for newly fetched students\n\tuseEffect(() => {\n\t\tsetFetchInfo((oldFetchInfo) => {\n\t\t\tconst newFetchInfo = new Map(oldFetchInfo);\n\t\t\tprops.students.forEach((student) => {\n\t\t\t\tif (!newFetchInfo.has(student))\n\t\t\t\t\tnewFetchInfo.set(student, fetchDefaults);\n\t\t\t});\n\t\t\treturn newFetchInfo;\n\t\t});\n\t}, [props.students, setFetchInfo]);\n\n\tconst fetchStudentPuzzleData = useCallback(\n\t\tasync (student) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst { activepuzzle, puzzleName, puzzleId } = fetchInfo.get(\n\t\t\t\tstudent\n\t\t\t);\n\t\t\tconst puzzleuri = activepuzzle\n\t\t\t\t? \"activepuzzle\"\n\t\t\t\t: `${puzzleName}/${puzzleId}`;\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/${puzzleuri}`;\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t\t});\n\t\t\treturn await response.json();\n\t\t},\n\t\t[fetchInfo]\n\t);\n\n\tconst fetchStudentCompletedList = useCallback(\n\t\tasync (student) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst { puzzleName } = fetchInfo.get(student);\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/${puzzleName}/completed`;\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t\t});\n\t\t\treturn await response.json();\n\t\t},\n\t\t[fetchInfo]\n\t);\n\n\tconst setCompleted = useCallback(\n\t\tasync (student, completed) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst { puzzleName, puzzleId } = puzzleData.get(student);\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/${puzzleName}/${puzzleId}/completed`;\n\t\t\tfetch(url, {\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tauthorization: process.env.REACT_APP_INSTRUCTOR_PW,\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ completed }),\n\t\t\t});\n\t\t},\n\t\t[puzzleData]\n\t);\n\n\tconst updateHistory = useCallback(\n\t\tasync (student) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/activepuzzle`;\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t\t});\n\t\t\tconst {\n\t\t\t\tpuzzleName,\n\t\t\t\tpuzzleId,\n\t\t\t\t...puzzleData\n\t\t\t} = await response.json();\n\t\t\tif (!puzzleName) return;\n\t\t\tsetStudentHistory((oldHistory) => {\n\t\t\t\tconst studentHistory = oldHistory.get(student) || {};\n\t\t\t\tconst puzzleHistory = studentHistory[puzzleName] || {};\n\t\t\t\tconst instanceHistory = puzzleHistory[puzzleId] || [];\n\t\t\t\tconst isNewData =\n\t\t\t\t\t!instanceHistory[0] ||\n\t\t\t\t\tJSON.stringify({ puzzleId, ...puzzleData }) !==\n\t\t\t\t\t\tJSON.stringify(instanceHistory[0].data);\n\t\t\t\tif (isNewData) {\n\t\t\t\t\tpuzzleHistory[puzzleId] = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: { puzzleId, ...puzzleData },\n\t\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...instanceHistory,\n\t\t\t\t\t];\n\t\t\t\t\tstudentHistory[puzzleName] = puzzleHistory;\n\t\t\t\t\tconst newHistory = new Map(oldHistory);\n\t\t\t\t\tnewHistory.set(student, studentHistory);\n\t\t\t\t\treturn newHistory;\n\t\t\t\t} else {\n\t\t\t\t\treturn oldHistory;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[setStudentHistory]\n\t);\n\n\tconst refresh = useCallback(async () => {\n\t\tconst [dataUpdates, completionUpdates] = await Promise.all([\n\t\t\tPromise.all(\n\t\t\t\tactiveStudents.map(async (student) => {\n\t\t\t\t\tupdateHistory(student);\n\t\t\t\t\tconst data = await fetchStudentPuzzleData(student);\n\t\t\t\t\treturn [student, data];\n\t\t\t\t})\n\t\t\t),\n\t\t\tPromise.all(\n\t\t\t\tactiveStudents.map(async (student) => {\n\t\t\t\t\tconst list = await fetchStudentCompletedList(student);\n\t\t\t\t\treturn [student, list];\n\t\t\t\t})\n\t\t\t),\n\t\t]);\n\t\tsetPuzzleData((oldPuzzleData) => {\n\t\t\tconst newPuzzleData = new Map(oldPuzzleData);\n\t\t\tdataUpdates.forEach((data) => newPuzzleData.set(...data));\n\t\t\treturn newPuzzleData;\n\t\t});\n\n\t\tsetCompletedLists((oldCompletedLists) => {\n\t\t\tconst newCompletedLists = new Map(oldCompletedLists);\n\t\t\tcompletionUpdates.forEach((data) => newCompletedLists.set(...data));\n\t\t\treturn newCompletedLists;\n\t\t});\n\t\tconsole.log(\"refreshed\");\n\t}, [\n\t\tactiveStudents,\n\t\tsetPuzzleData,\n\t\tfetchStudentPuzzleData,\n\t\tupdateHistory,\n\t\tsetCompletedLists,\n\t\tfetchStudentCompletedList,\n\t]);\n\n\t//refresh puzzle data\n\tuseEffect(() => {\n\t\trefresh();\n\t\tconst refreshInterval = setInterval(refresh, 2000);\n\t\treturn () => clearInterval(refreshInterval);\n\t}, [refresh]);\n\n\tconst setStudentFetchInfo = (student, key, value) => {\n\t\tconst info = { ...fetchInfo.get(student) };\n\t\tinfo[key] = value;\n\t\tif (key === \"puzzleName\") {\n\t\t\tinfo.puzzleId = props.puzzleDirectory[value][0];\n\t\t}\n\t\tconst newFetchInfo = new Map(fetchInfo);\n\t\tnewFetchInfo.set(student, info);\n\t\tsetFetchInfo(newFetchInfo);\n\t};\n\n\tconst renderStudentPuzzle = (student) => {\n\t\tconst { puzzleName, completed, ...data } =\n\t\t\tpuzzleData.get(student) || {};\n\t\tconst render = puzzleComponents[puzzleName];\n\t\treturn render ? (\n\t\t\t<div className=\"student-puzzle\">\n\t\t\t\t{render(data)}\n\t\t\t\t<div className=\"completion\">\n\t\t\t\t\tCompleted:{\" \"}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`completed-check ${\n\t\t\t\t\t\t\tcompleted ? \"complete\" : \"incomplete\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tonClick={() => setCompleted(student, !completed)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{completed ? \"\\u2713\" : \"\\u25EF\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : null;\n\t};\n\n\tconst renderHistory = (student) => {\n\t\tconst history = studentHistory.get(student);\n\t\tif (!history) return null;\n\t\tconst { first, last } = student;\n\t\tconst sortedHistory = Object.keys(history)\n\t\t\t.flatMap((key) =>\n\t\t\t\tObject.keys(history[key]).map((instanceKey) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdata: { puzzleId },\n\t\t\t\t\t\ttimestamp,\n\t\t\t\t\t} = history[key][instanceKey][0];\n\t\t\t\t\treturn { puzzleName: key, puzzleId, timestamp };\n\t\t\t\t})\n\t\t\t)\n\t\t\t.sort(({ timestamp: a }, { timestamp: b }) => (a > b ? -1 : 1));\n\t\treturn (\n\t\t\t<select\n\t\t\t\tname=\"history-select\"\n\t\t\t\tclassName=\"history-select\"\n\t\t\t\tid={`history-${first}-${last}`}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tconst { puzzleName, puzzleId } = JSON.parse(e.target.value);\n\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleName\", puzzleName);\n\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleId\", puzzleId);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{sortedHistory.map(({ puzzleName, puzzleId, timestamp }) => {\n\t\t\t\t\tconst time = new Date(timestamp).toLocaleTimeString();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tvalue={JSON.stringify({ puzzleName, puzzleId })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{puzzleId} {time}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</select>\n\t\t);\n\t};\n\n\tconst renderPuzzleSelect = (student) => {\n\t\tconst directory = props.puzzleDirectory;\n\t\tconst { puzzleName } = fetchInfo.get(student);\n\t\tconst displayedData = puzzleData.get(student);\n\t\tconst completedList = completedLists.get(student);\n\t\tconst ids = puzzleName ? directory[puzzleName] : [];\n\t\treturn (\n\t\t\t<div className=\"puzzle-select\">\n\t\t\t\t<select\n\t\t\t\t\tname=\"type-select\"\n\t\t\t\t\tid=\"type-select\"\n\t\t\t\t\tvalue={puzzleName}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetStudentFetchInfo(\n\t\t\t\t\t\t\tstudent,\n\t\t\t\t\t\t\t\"puzzleName\",\n\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{Object.keys(directory).map((type) => (\n\t\t\t\t\t\t<option value={type}>{type}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t<ul>\n\t\t\t\t\t{ids.map((id) => {\n\t\t\t\t\t\tconst completed = completedList\n\t\t\t\t\t\t\t? completedLists.get(student)[id]\n\t\t\t\t\t\t\t: false;\n\t\t\t\t\t\tconst active = displayedData\n\t\t\t\t\t\t\t? displayedData.puzzleId === id\n\t\t\t\t\t\t\t: false;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleId\", id)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={active ? \"active\" : \"\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`completed-check ${\n\t\t\t\t\t\t\t\t\t\tcompleted ? \"complete\" : \"incomplete\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetCompleted(student, !completed)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{completed ? \"\\u2713\" : \"\\u25CB \"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{id}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst hasRecentActivity = (student) => {\n\t\tconst history = studentHistory.get(student) || {};\n\t\treturn Object.keys(history).some((key) =>\n\t\t\tObject.keys(history[key]).some((instanceKey) => {\n\t\t\t\tconst { timestamp } = history[key][instanceKey][0];\n\t\t\t\treturn Date.now() - timestamp < 60000;\n\t\t\t})\n\t\t);\n\t};\n\n\tconst renderStudentDisplay = (student) => {\n\t\tconst { first, last } = student;\n\t\tconst puzzleInfo = fetchInfo.get(student);\n\t\tconst activepuzzle = puzzleInfo ? puzzleInfo.activepuzzle : null;\n\t\treturn (\n\t\t\t<li key={`${first}_${last}`} className=\"student-display\">\n\t\t\t\t<div className=\"student-header\">\n\t\t\t\t\t<div className=\"student-name\">\n\t\t\t\t\t\t{capitalize(first)} {capitalize(last)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"activity-indicator\">\n\t\t\t\t\t\t{hasRecentActivity(student) ? null : \"Inactive\"}\n\t\t\t\t\t</div>\n\t\t\t\t\t{renderHistory(student)}\n\t\t\t\t\t<div className=\"show-active\">\n\t\t\t\t\t\tShow Active Puzzle:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tname=\"active\"\n\t\t\t\t\t\t\tid={`${first}_${last}-active`}\n\t\t\t\t\t\t\tchecked={activepuzzle ? true : false}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\tsetStudentFetchInfo(\n\t\t\t\t\t\t\t\t\tstudent,\n\t\t\t\t\t\t\t\t\t\"activepuzzle\",\n\t\t\t\t\t\t\t\t\t!activepuzzle\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{renderPuzzleSelect(student)}\n\t\t\t\t{renderStudentPuzzle(student)}\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"puzzle-display\">\n\t\t\t{activeStudents.map(renderStudentDisplay)}\n\t\t</ul>\n\t);\n}\n\nfunction capitalize(string) {\n\treturn string.replace(/^./, (char) => char.toUpperCase());\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport StudentList from \"./student-list\";\nimport PuzzleDisplay from \"./puzzle-display\";\n\nimport \"./stylesheets/index.css\";\n\nconst puzzleDirectory = {\n\tcalcudoku: [\n\t\t\"4x4beginner1\",\n\t\t\"4x4beginner2\",\n\t\t\"4x4beginner3\",\n\t\t\"4x4beginner4\",\n\t\t\"4x4beginner5\",\n\t\t\"4x4intermediate1\",\n\t\t\"4x4intermediate2\",\n\t\t\"4x4intermediate3\",\n\t\t\"4x4intermediate4\",\n\t\t\"4x4expert1\",\n\t\t\"4x4expert2\",\n\t\t\"4x4expert3\",\n\t\t\"5x5beginner1\",\n\t\t\"5x5beginner2\",\n\t\t\"5x5intermediate1\",\n\t],\n\tlogic: [\n\t\t\"wolfgoatcabbage\",\n\t\t\"torch\",\n\t\t\"goldboxes\",\n\t\t\"10coins\",\n\t\t\"socks\",\n\t\t\"childrenboat\",\n\t\t\"applesandoranges\",\n\t\t\"averybobbycam\",\n\t\t\"bear\",\n\t\t\"hats\",\n\t],\n\tlight: [\n\t\t\"small\",\n\t\t\"medium\",\n\t\t\"large\",\n\t\t\"smallx\",\n\t\t\"mediumx\",\n\t\t\"largex\",\n\t].flatMap((instance) =>\n\t\tArray.from({ length: 5 }, (...[, i]) => `${instance}${i + 1}`)\n\t),\n};\n\nfunction App() {\n\tconst [students, setStudents] = useState([]);\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<StudentList students={students} setStudents={setStudents} />\n\t\t\t<PuzzleDisplay\n\t\t\t\tstudents={students}\n\t\t\t\tpuzzleDirectory={puzzleDirectory}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n//---------\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}
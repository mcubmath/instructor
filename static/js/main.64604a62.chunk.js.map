{"version":3,"sources":["student-list.js","templates/calcudoku.js","templates/logic.js","puzzle-display.js","index.js"],"names":["StudentList","props","students","useState","displayedStudents","setDisplayedStudents","className","RefreshButton","type","placeholder","onChange","event","query","target","value","split","filteredStudents","filter","first","last","every","pattern","regexp","RegExp","match","map","renderStudent","bind","setStudents","fetchStudentList","a","listurl","process","fetch","headers","authorization","response","ok","json","list","student","find","console","log","status","onClick","active","capitalize","name","id","defaultChecked","string","replace","char","toUpperCase","Calcudoku","data","size","grid","puzzleData","cages","work","Array","fill","index","col","Math","floor","row","matchSquare","squareMatcher","entry","cage","squares","neighbors","neighborList","isTopLeft","square","result","operation","generateGrid","renderSquare","classList","join","disabled","directions","dir","push","Logic","description","puzzleComponents","calcudoku","logic","fetchDefaults","activepuzzle","puzzleName","puzzleId","PuzzleDisplay","Map","setPuzzleData","fetchInfo","setFetchInfo","studentHistory","setStudentHistory","activeStudents","useMemo","useEffect","oldFetchInfo","newFetchInfo","forEach","has","set","fetchStudentPuzzleData","useCallback","get","puzzleuri","url","updateHistory","oldHistory","puzzleHistory","instanceHistory","JSON","stringify","timestamp","Date","now","newHistory","refresh","Promise","all","dataUpdates","oldPuzzleData","newPuzzleData","refreshInterval","setInterval","clearInterval","setStudentFetchInfo","key","info","puzzleDirectory","renderStudentPuzzle","render","renderHistory","history","sortedHistory","Object","keys","flatMap","instanceKey","sort","e","parse","time","toLocaleTimeString","renderPuzzleSelect","directory","ids","hasRecentActivity","some","puzzleInfo","checked","App","setPuzzleDirectory","instanceListUrl","instance","ReactDOM","StrictMode","document","getElementById"],"mappings":"2OAEe,SAASA,EAAYC,GAAQ,IACnCC,EAAaD,EAAbC,SADkC,EAEQC,mBAASD,GAFjB,mBAEnCE,EAFmC,KAEhBC,EAFgB,KAa1C,OACC,sBAAKC,UAAU,yBAAf,UACC,cAACC,EAAD,2BACKN,GADL,IAECI,qBAAsBA,KAEvB,uBAAOG,KAAK,OAAOC,YAAY,SAASC,SAhB3B,SAACC,GACf,IAAMC,EAAQD,EAAME,OAAOC,MAAMC,MAAM,KACjCC,EAAmBd,EAASe,QAAO,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACxCP,EAAMQ,OAAM,SAACC,GACZ,IAAMC,EAAS,IAAIC,OAAOF,EAAS,KACnC,OAAOH,EAAMM,MAAMF,IAAWH,EAAKK,MAAMF,SAG3CjB,EAAqBW,MASpB,oBAAIV,UAAU,eAAd,SACEF,EAAkBqB,IAAIC,EAAcC,KAAK,KAAM1B,SAMpD,SAASM,EAAT,GAAyE,IAAhDL,EAA+C,EAA/CA,SAAU0B,EAAqC,EAArCA,YAAavB,EAAwB,EAAxBA,qBACzCwB,EAAgB,uCAAG,gCAAAC,EAAA,6DAClBC,EADkB,UACLC,gDADK,sBAEDC,MAAMF,EAAS,CACrCG,QAAS,CAAEC,cAAeH,eAHH,YAElBI,EAFkB,QAKXC,GALW,0CAOJD,EAASE,OAPL,OAOlBC,EAPkB,OAOad,KAAI,SAACe,GAKvC,OAJqBtC,EAASuC,MAC7B,gBAAGvB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACCD,IAAUsB,EAAQtB,OAASC,IAASqB,EAAQrB,SAEvBqB,KAExBZ,EAAYW,GACZlC,EAAqBkC,GAfC,kDAiBtBG,QAAQC,IAAR,MAjBsB,gCAmBjBD,QAAQC,IAAI,wBAA0BP,EAASQ,QAnB9B,0DAAH,qDAqBtB,OACC,wBAAQtC,UAAU,mBAAmBuC,QAAShB,EAA9C,qBAMF,SAASH,EAAT,EAAkDc,GAAU,IAAnCtC,EAAkC,EAAlCA,SAAU0B,EAAwB,EAAxBA,YAC1BV,EAAwBsB,EAAxBtB,MAAOC,EAAiBqB,EAAjBrB,KAAM2B,EAAWN,EAAXM,OACrB,OACC,+BACEC,EAAW7B,GADb,IACsB6B,EAAW5B,GAAO,IACvC,uBACCX,KAAK,WACLwC,KAAK,SACLC,GAAE,UAAK/B,EAAL,YAAcC,EAAd,WACF+B,iBAAgBJ,EAChBpC,SAAU,WACT8B,EAAQM,QAAUA,EAClBlB,EAAY,YAAI1B,SATnB,UAAYgB,EAAZ,YAAqBC,IAgBvB,SAAS4B,EAAWI,GACnB,OAAOA,EAAOC,QAAQ,MAAM,SAACC,GAAD,OAAUA,EAAKC,iB,YC5E7B,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC3BC,EAASD,EAATC,KACFC,EAyBP,SAAsBC,GAAa,IAC1BF,EAAsBE,EAAtBF,KAAMG,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAErB,OADgBC,MAAM,KAAD,IAACL,EAAQ,IAAGM,KAAK,MACvBtC,KAAI,WAAmB,IAAD,wEAAXuC,EAAW,KAC9BC,EAAMC,KAAKC,MAAMH,EAAQP,GACzBW,EAAMJ,EAAQP,EACdY,EAAcC,EAAc,CAAEL,MAAKG,QACnCG,EAAQV,EAAKpB,KAAK4B,GAClBG,EAAOZ,EAAMnB,MAAK,SAAC+B,GAAD,OAAUA,EAAKC,QAAQhC,KAAK4B,MAC9CK,EAAYC,EAAa,CAAEV,MAAKG,OAAOI,GACvCI,EAAYJ,EAAKC,QAAQrD,OAC9B,SAACyD,GAAD,OACCA,EAAOZ,KAAOA,IAAQY,EAAOT,KAAOA,GAAOS,EAAOZ,IAAMA,MAEpDa,EAASF,EAAYJ,EAAKM,OAAS,KACnCC,EAAYH,EAAYJ,EAAKO,UAAY,KACzCjE,EAAQyD,EAAQA,EAAMzD,MAAQ,KACpC,MAAO,CAAEmD,MAAKG,MAAKtD,QAAO4D,YAAWI,SAAQC,gBA1CjCC,CAAaxB,GAC1B,OACC,8BACC,qBAAKlD,UAAU,mBAAmBmD,KAAMA,EAAxC,SACC,qBAAKnD,UAAU,iBAAiBmD,KAAMA,EAAtC,SACEC,EAAKjC,IAAIwD,SAOf,SAASA,EAAaJ,GACrB,IAAMK,EAAY,oBAAsBL,EAAOH,UAAUS,KAAK,KAC9D,OACC,sBAAK7E,UAAW4E,EAAhB,UACC,sBAAK5E,UAAU,iBAAf,UACEuE,EAAOC,OACPD,EAAOE,aAET,uBAAOvE,KAAK,SAASM,MAAO+D,EAAO/D,OAAS,GAAIsE,UAAQ,OA0B3D,SAAST,EAAaE,EAAQL,GAC7B,IAAME,EAAY,GACZW,EAAa,CAClB,OAAQ,CAAEpB,IAAKY,EAAOZ,IAAM,EAAGG,IAAKS,EAAOT,KAC3C,SAAU,CAAEH,IAAKY,EAAOZ,IAAM,EAAGG,IAAKS,EAAOT,KAC7C,SAAU,CAAEH,IAAKY,EAAOZ,IAAKG,IAAKS,EAAOT,IAAM,GAC/C,UAAW,CAAEH,IAAKY,EAAOZ,IAAKG,IAAKS,EAAOT,IAAM,IAGjD,IAAK,IAAIkB,KAAOD,EAAY,CAC3B,IAAMhB,EAAcC,EAAce,EAAWC,IACzCd,EAAKC,QAAQhC,KAAK4B,IACrBK,EAAUa,KAAKD,GAIjB,OAAOZ,EAGR,SAASJ,EAAT,GAAsC,IAAbL,EAAY,EAAZA,IAAKG,EAAO,EAAPA,IAC7B,OAAO,SAACS,GAAD,OAAYA,EAAOZ,MAAQA,GAAOY,EAAOT,MAAQA,GCpE1C,SAASoB,EAAT,GAAiD,IAAD,IAA/BhC,KAAQiC,EAAuB,EAAvBA,YAAa5B,EAAU,EAAVA,KACpD,OACC,sBAAKvD,UAAU,QAAf,UACC,mBAAGA,UAAU,cAAb,SAA4BmF,IAC5B,mBAAGnF,UAAU,OAAb,SAAqBuD,OCDxB,IAAM6B,EAAmB,CACxBC,UAAW,SAACnC,GAAD,OAAU,cAACD,EAAD,CAAWC,KAAMA,KACtCoC,MAAO,SAACpC,GAAD,OAAU,cAACgC,EAAD,CAAOhC,KAAMA,MAGzBqC,EAAgB,CACrBC,cAAc,EACdC,WAAY,YACZC,SAAU,gBAGI,SAASC,EAAchG,GAAQ,IAAD,EACRE,mBAAS,IAAI+F,KADL,mBACrCvC,EADqC,KACzBwC,EADyB,OAEVhG,mBAAS,IAAI+F,KAFH,mBAErCE,EAFqC,KAE1BC,EAF0B,OAGAlG,mBAAS,IAAI+F,KAHb,mBAGrCI,EAHqC,KAGrBC,EAHqB,KAItCC,EAAiBC,mBACtB,kBAAMxG,EAAMC,SAASe,QAAO,SAACuB,GAAD,OAAaA,EAAQM,YACjD,CAAC7C,EAAMC,WAIRwG,qBAAU,WACTL,GAAa,SAACM,GACb,IAAMC,EAAe,IAAIV,IAAIS,GAK7B,OAJA1G,EAAMC,SAAS2G,SAAQ,SAACrE,GAClBoE,EAAaE,IAAItE,IACrBoE,EAAaG,IAAIvE,EAASqD,MAErBe,OAEN,CAAC3G,EAAMC,SAAUmG,IAEpB,IAAMW,EAAyBC,sBAAW,uCACzC,WAAOzE,GAAP,+BAAAV,EAAA,6DACSZ,EAAgBsB,EAAhBtB,MAAOC,EAASqB,EAATrB,KADhB,EAEgDiF,EAAUc,IACxD1E,GADOsD,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,WAAYC,EAFnC,EAEmCA,SAG5BmB,EAAYrB,EACf,eAD2B,UAExBC,EAFwB,YAEVC,GACdoB,EACLpF,gDAAA,oBACad,EADb,YACsBC,EADtB,YAC8BgG,GAVhC,SAWwBlF,MAAMmF,EAAK,CACjClF,QAAS,CAAEC,cAAeH,eAZ5B,cAWOI,EAXP,gBAccA,EAASE,OAdvB,oFADyC,sDAiBzC,CAAC8D,IAGIiB,EAAgBJ,sBAAW,uCAChC,WAAOzE,GAAP,6BAAAV,EAAA,6DACSZ,EAAgBsB,EAAhBtB,MAAOC,EAASqB,EAATrB,KACTiG,EACLpF,gDAAA,oBACad,EADb,YACsBC,EADtB,iBAHF,SAKwBc,MAAMmF,EAAK,CACjClF,QAAS,CAAEC,cAAeH,eAN5B,cAKOI,EALP,gBAYWA,EAASE,OAZpB,mBASEyD,EATF,EASEA,WACAC,EAVF,EAUEA,SACGrC,EAXL,yCAaMoC,EAbN,mDAcCQ,GAAkB,SAACe,GAClB,IAAMhB,EAAiBgB,EAAWJ,IAAI1E,IAAY,GAC5C+E,EAAgBjB,EAAeP,IAAe,GAC9CyB,EAAkBD,EAAcvB,IAAa,GAKnD,IAHEwB,EAAgB,IACjBC,KAAKC,UAAL,aAAiB1B,YAAarC,MAC7B8D,KAAKC,UAAUF,EAAgB,GAAGhE,MACrB,CACd+D,EAAcvB,GAAd,CACC,CACCxC,KAAK,aAAGwC,YAAarC,GACrBgE,UAAWC,KAAKC,QAHlB,mBAKIL,IAEJlB,EAAeP,GAAcwB,EAC7B,IAAMO,EAAa,IAAI5B,IAAIoB,GAE3B,OADAQ,EAAWf,IAAIvE,EAAS8D,GACjBwB,EAEP,OAAOR,KAnCV,4CADgC,sDAwChC,CAACf,IAGIwB,EAAUd,sBAAW,sBAAC,4BAAAnF,EAAA,sEACDkG,QAAQC,IACjCzB,EAAe/E,IAAf,+BAAAK,EAAA,MAAmB,WAAOU,GAAP,eAAAV,EAAA,6DAClBuF,EAAc7E,GADI,SAECwE,EAAuBxE,GAFxB,cAEZgB,EAFY,yBAGX,CAAChB,EAASgB,IAHC,2CAAnB,wDAF0B,OACrB0E,EADqB,OAQ3B/B,GAAc,SAACgC,GACd,IAAMC,EAAgB,IAAIlC,IAAIiC,GAE9B,OADAD,EAAYrB,SAAQ,SAACrD,GAAD,OAAU4E,EAAcrB,IAAd,MAAAqB,EAAa,YAAQ5E,OAC5C4E,KAER1F,QAAQC,IAAI,aAbe,2CAczB,CAAC6D,EAAgBL,EAAea,EAAwBK,IAG3DX,qBAAU,WACTqB,IACA,IAAMM,EAAkBC,YAAYP,EAAS,KAC7C,OAAO,kBAAMQ,cAAcF,MACzB,CAACN,IAEJ,IAAMS,EAAsB,SAAChG,EAASiG,EAAK3H,GAC1C,IAAM4H,EAAI,eAAQtC,EAAUc,IAAI1E,IAChCkG,EAAKD,GAAO3H,EACA,eAAR2H,IACHC,EAAK1C,SAAW/F,EAAM0I,gBAAgB7H,GAAO,IAE9C,IAAM8F,EAAe,IAAIV,IAAIE,GAC7BQ,EAAaG,IAAIvE,EAASkG,GAC1BrC,EAAaO,IAGRgC,EAAsB,SAACpG,GAAa,IAAD,EACRmB,EAAWuD,IAAI1E,IAAY,GAAnDuD,EADgC,EAChCA,WAAevC,EADiB,8BAElCqF,EAASnD,EAAiBK,GAChC,OAAO8C,EAASA,EAAOrF,GAAQ,MAG1BsF,EAAgB,SAACtG,GACtB,IAAMuG,EAAUzC,EAAeY,IAAI1E,GACnC,IAAKuG,EAAS,OAAO,KAFa,IAG1B7H,EAAgBsB,EAAhBtB,MAAOC,EAASqB,EAATrB,KACT6H,EAAgBC,OAAOC,KAAKH,GAChCI,SAAQ,SAACV,GAAD,OACRQ,OAAOC,KAAKH,EAAQN,IAAMhH,KAAI,SAAC2H,GAAiB,IAAD,EAI1CL,EAAQN,GAAKW,GAAa,GAFrBpD,EAFqC,EAE7CxC,KAAQwC,SACR2B,EAH6C,EAG7CA,UAED,MAAO,CAAE5B,WAAY0C,EAAKzC,WAAU2B,mBAGrC0B,MAAK,uBAAG1B,UAAH,EAAqBA,WAA6B,EAAI,KAC7D,OACC,wBACC3E,KAAK,iBACL1C,UAAU,iBACV2C,GAAE,kBAAa/B,EAAb,YAAsBC,GACxBT,SAAU,SAAC4I,GAAO,IAAD,EACiB7B,KAAK8B,MAAMD,EAAEzI,OAAOC,OAA7CiF,EADQ,EACRA,WAAYC,EADJ,EACIA,SACpBwC,EAAoBhG,EAAS,aAAcuD,GAC3CyC,EAAoBhG,EAAS,WAAYwD,IAP3C,SAUEgD,EAAcvH,KAAI,YAA0C,IAAvCsE,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,SAAU2B,EAAgB,EAAhBA,UACrC6B,EAAO,IAAI5B,KAAKD,GAAW8B,qBACjC,OACC,yBACC3I,MAAO2G,KAAKC,UAAU,CAAE3B,aAAYC,aADrC,UAGEA,EAHF,IAGawD,WAQZE,EAAqB,SAAClH,GAC3B,IAAMmH,EAAY1J,EAAM0I,gBADe,EAENvC,EAAUc,IAAI1E,GAAvCuD,EAF+B,EAE/BA,WAAYC,EAFmB,EAEnBA,SACd4D,EAAM7D,EAAa4D,EAAU5D,GAAc,GACjD,OACC,sBAAKzF,UAAU,gBAAf,UACC,wBACC0C,KAAK,cACLC,GAAG,cACHnC,MAAOiF,EACPrF,SAAU,SAAC4I,GAAD,OACTd,EACChG,EACA,aACA8G,EAAEzI,OAAOC,QARZ,SAYEmI,OAAOC,KAAKS,GAAWlI,KAAI,SAACjB,GAAD,OAC3B,wBAAQM,MAAON,EAAf,SAAsBA,SAGxB,wBACCwC,KAAK,kBACLC,GAAG,kBACHnC,MAAOkF,EACPtF,SAAU,SAAC4I,GAAD,OACTd,EAAoBhG,EAAS,WAAY8G,EAAEzI,OAAOC,QALpD,SAQE8I,EAAInI,KAAI,SAACwB,GAAD,OACR,wBAAQnC,MAAOmC,EAAf,SAAoBA,SAGrB6F,EAActG,OAKZqH,EAAoB,SAACrH,GAC1B,IAAMuG,EAAUzC,EAAeY,IAAI1E,IAAY,GAC/C,OAAOyG,OAAOC,KAAKH,GAASe,MAAK,SAACrB,GAAD,OAChCQ,OAAOC,KAAKH,EAAQN,IAAMqB,MAAK,SAACV,GAAiB,IACxCzB,EAAcoB,EAAQN,GAAKW,GAAa,GAAxCzB,UACR,OAAOC,KAAKC,MAAQF,EAAY,WA2CnC,OACC,oBAAIrH,UAAU,iBAAd,SACEkG,EAAe/E,KAxCW,SAACe,GAAa,IAClCtB,EAAgBsB,EAAhBtB,MAAOC,EAASqB,EAATrB,KACT4I,EAAa3D,EAAUc,IAAI1E,GAC3BsD,EAAeiE,EAAaA,EAAWjE,aAAe,KAC5D,OACC,+BACC,sBAAKxF,UAAU,iBAAf,UACC,sBAAKA,UAAU,eAAf,UACC,uBAAMA,UAAU,OAAhB,UACEyC,EAAW7B,GADb,IACsB6B,EAAW5B,MAEjC,sBAAMb,UAAU,qBAAhB,SACEuJ,EAAkBrH,GAAW,KAAO,gBAGvC,sDAEC,uBACChC,KAAK,WACLwC,KAAK,SACLC,GAAE,UAAK/B,EAAL,YAAcC,EAAd,WACF6I,UAASlE,EACTpF,SAAU,kBACT8H,EACChG,EACA,gBACCsD,SAKHA,EAA6C,KAA9B4D,EAAmBlH,MAEpCoG,EAAoBpG,KA5BtB,UAAYtB,EAAZ,YAAqBC,SAwCxB,SAAS4B,EAAWI,GACnB,OAAOA,EAAOC,QAAQ,MAAM,SAACC,GAAD,OAAUA,EAAKC,iB,MC3Q5C,SAAS2G,IAAO,IAAD,EACkB9J,mBAAS,IAD3B,mBACPD,EADO,KACG0B,EADH,OAEgCzB,mBAAS,CACtDwF,UAAW,GACXC,MAAO,KAJM,mBAEP+C,EAFO,KAEUuB,EAFV,KAiCd,OA3BAxD,qBAAU,WACT,sBAAC,sBAAA5E,EAAA,+EAEOkG,QAAQC,IACbgB,OAAOC,KAAKP,GAAiBlH,IAA7B,iBAAAwH,OAAA,IAAAA,CAAA,UAAiC,WAAOlD,GAAP,iBAAAjE,EAAA,6DAC1BqI,EAD0B,UACLnI,gDADK,oBACoC+D,GADpC,SAET9D,MAAMkI,EAAiB,CAC7CjI,QAAS,CACRC,cACCH,eAL6B,YAE1BI,EAF0B,QAQnBC,GARmB,iCAUxBD,EAASE,OAVe,OAS/BqG,EAAgB5C,GATe,OAW7BtE,KAAI,qBAAG2I,YAXsB,wBAa/B1H,QAAQC,IAAR,sBAA2BP,EAASQ,SAbL,4CAAjC,wDAHF,OAoBCsH,EAAmB,eAAKvB,IApBzB,+CAsBCjG,QAAQC,IAAR,MAtBD,uDAAD,KAyBE,IAEF,sBAAKrC,UAAU,MAAf,UACC,cAACN,EAAD,CAAaE,SAAUA,EAAU0B,YAAaA,IAC9C,cAACqE,EAAD,CACC/F,SAAUA,EACVyI,gBAAiBA,OAQrB0B,IAASxB,OACR,cAAC,IAAMyB,WAAP,UACC,cAACL,EAAD,MAEDM,SAASC,eAAe,W","file":"static/js/main.64604a62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function StudentList(props) {\n\tconst { students } = props;\n\tconst [displayedStudents, setDisplayedStudents] = useState(students);\n\tconst filter = (event) => {\n\t\tconst query = event.target.value.split(\" \");\n\t\tconst filteredStudents = students.filter(({ first, last }) =>\n\t\t\tquery.every((pattern) => {\n\t\t\t\tconst regexp = new RegExp(pattern, \"i\");\n\t\t\t\treturn first.match(regexp) || last.match(regexp);\n\t\t\t})\n\t\t);\n\t\tsetDisplayedStudents(filteredStudents);\n\t};\n\treturn (\n\t\t<div className=\"student-list-container\">\n\t\t\t<RefreshButton\n\t\t\t\t{...props}\n\t\t\t\tsetDisplayedStudents={setDisplayedStudents}\n\t\t\t/>\n\t\t\t<input type=\"text\" placeholder=\"Filter\" onChange={filter} />\n\t\t\t<ul className=\"student-list\">\n\t\t\t\t{displayedStudents.map(renderStudent.bind(null, props))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction RefreshButton({ students, setStudents, setDisplayedStudents }) {\n\tconst fetchStudentList = async () => {\n\t\tconst listurl = `${process.env.REACT_APP_API_URL}/students`;\n\t\tconst response = await fetch(listurl, {\n\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t});\n\t\tif (response.ok) {\n\t\t\ttry {\n\t\t\t\tlet list = (await response.json()).map((student) => {\n\t\t\t\t\tconst studentMatch = students.find(\n\t\t\t\t\t\t({ first, last }) =>\n\t\t\t\t\t\t\tfirst === student.first && last === student.last\n\t\t\t\t\t);\n\t\t\t\t\treturn studentMatch || student;\n\t\t\t\t});\n\t\t\t\tsetStudents(list);\n\t\t\t\tsetDisplayedStudents(list);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t} else console.log(\"HTTP error, status = \" + response.status);\n\t};\n\treturn (\n\t\t<button className=\"refresh-students\" onClick={fetchStudentList}>\n\t\t\tRefresh\n\t\t</button>\n\t);\n}\n\nfunction renderStudent({ students, setStudents }, student) {\n\tconst { first, last, active } = student;\n\treturn (\n\t\t<li key={`${first} ${last}`}>\n\t\t\t{capitalize(first)} {capitalize(last)}{\" \"}\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"active\"\n\t\t\t\tid={`${first}_${last}-active`}\n\t\t\t\tdefaultChecked={active ? true : false}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tstudent.active = !active;\n\t\t\t\t\tsetStudents([...students]);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</li>\n\t);\n}\n\nfunction capitalize(string) {\n\treturn string.replace(/^./, (char) => char.toUpperCase());\n}\n","import React from \"react\";\n\nexport default function Calcudoku({ data }) {\n\tconst { size } = data;\n\tconst grid = generateGrid(data);\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"puzzle-container\" size={size}>\n\t\t\t\t<div className=\"grid-container\" size={size}>\n\t\t\t\t\t{grid.map(renderSquare)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction renderSquare(square) {\n\tconst classList = \"calcudoku-square \" + square.neighbors.join(\" \");\n\treturn (\n\t\t<div className={classList}>\n\t\t\t<div className=\"cage-indicator\">\n\t\t\t\t{square.result}\n\t\t\t\t{square.operation}\n\t\t\t</div>\n\t\t\t<input type=\"number\" value={square.value || \"\"} disabled />\n\t\t</div>\n\t);\n}\n\nfunction generateGrid(puzzleData) {\n\tconst { size, cages, work } = puzzleData;\n\tconst squares = Array(size ** 2).fill(null);\n\treturn squares.map((...[, index]) => {\n\t\tconst col = Math.floor(index / size);\n\t\tconst row = index % size;\n\t\tconst matchSquare = squareMatcher({ col, row });\n\t\tconst entry = work.find(matchSquare);\n\t\tconst cage = cages.find((cage) => cage.squares.find(matchSquare));\n\t\tconst neighbors = neighborList({ col, row }, cage);\n\t\tconst isTopLeft = cage.squares.every(\n\t\t\t(square) =>\n\t\t\t\tsquare.col >= col && (square.row >= row || square.col > col)\n\t\t);\n\t\tconst result = isTopLeft ? cage.result : null;\n\t\tconst operation = isTopLeft ? cage.operation : null;\n\t\tconst value = entry ? entry.value : null;\n\t\treturn { col, row, value, neighbors, result, operation };\n\t});\n}\n\nfunction neighborList(square, cage) {\n\tconst neighbors = [];\n\tconst directions = {\n\t\t\"n-up\": { col: square.col - 1, row: square.row },\n\t\t\"n-down\": { col: square.col + 1, row: square.row },\n\t\t\"n-left\": { col: square.col, row: square.row - 1 },\n\t\t\"n-right\": { col: square.col, row: square.row + 1 },\n\t};\n\n\tfor (let dir in directions) {\n\t\tconst matchSquare = squareMatcher(directions[dir]);\n\t\tif (cage.squares.find(matchSquare)) {\n\t\t\tneighbors.push(dir);\n\t\t}\n\t}\n\n\treturn neighbors;\n}\n\nfunction squareMatcher({ col, row }) {\n\treturn (square) => square.col === col && square.row === row;\n}\n","import React from \"react\";\n\nexport default function Logic({ data: { description, work } }) {\n\treturn (\n\t\t<div className=\"logic\">\n\t\t\t<p className=\"description\">{description}</p>\n\t\t\t<p className=\"work\">{work}</p>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\n\nimport Calcudoku from \"./templates/calcudoku\";\nimport Logic from \"./templates/logic\";\n\nconst puzzleComponents = {\n\tcalcudoku: (data) => <Calcudoku data={data} />,\n\tlogic: (data) => <Logic data={data} />,\n};\n\nconst fetchDefaults = {\n\tactivepuzzle: true,\n\tpuzzleName: \"calcudoku\",\n\tpuzzleId: \"4x4beginner1\",\n};\n\nexport default function PuzzleDisplay(props) {\n\tconst [puzzleData, setPuzzleData] = useState(new Map());\n\tconst [fetchInfo, setFetchInfo] = useState(new Map());\n\tconst [studentHistory, setStudentHistory] = useState(new Map());\n\tconst activeStudents = useMemo(\n\t\t() => props.students.filter((student) => student.active),\n\t\t[props.students]\n\t);\n\n\t//set defaults for newly fetched students\n\tuseEffect(() => {\n\t\tsetFetchInfo((oldFetchInfo) => {\n\t\t\tconst newFetchInfo = new Map(oldFetchInfo);\n\t\t\tprops.students.forEach((student) => {\n\t\t\t\tif (!newFetchInfo.has(student))\n\t\t\t\t\tnewFetchInfo.set(student, fetchDefaults);\n\t\t\t});\n\t\t\treturn newFetchInfo;\n\t\t});\n\t}, [props.students, setFetchInfo]);\n\n\tconst fetchStudentPuzzleData = useCallback(\n\t\tasync (student) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst { activepuzzle, puzzleName, puzzleId } = fetchInfo.get(\n\t\t\t\tstudent\n\t\t\t);\n\t\t\tconst puzzleuri = activepuzzle\n\t\t\t\t? \"activepuzzle\"\n\t\t\t\t: `${puzzleName}/${puzzleId}`;\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/${puzzleuri}`;\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t\t});\n\t\t\treturn await response.json();\n\t\t},\n\t\t[fetchInfo]\n\t);\n\n\tconst updateHistory = useCallback(\n\t\tasync (student) => {\n\t\t\tconst { first, last } = student;\n\t\t\tconst url =\n\t\t\t\tprocess.env.REACT_APP_API_URL +\n\t\t\t\t`/students/${first}_${last}/activepuzzle`;\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t\t});\n\t\t\tconst {\n\t\t\t\tpuzzleName,\n\t\t\t\tpuzzleId,\n\t\t\t\t...puzzleData\n\t\t\t} = await response.json();\n\t\t\tif (!puzzleName) return;\n\t\t\tsetStudentHistory((oldHistory) => {\n\t\t\t\tconst studentHistory = oldHistory.get(student) || {};\n\t\t\t\tconst puzzleHistory = studentHistory[puzzleName] || {};\n\t\t\t\tconst instanceHistory = puzzleHistory[puzzleId] || [];\n\t\t\t\tconst isNewData =\n\t\t\t\t\t!instanceHistory[0] ||\n\t\t\t\t\tJSON.stringify({ puzzleId, ...puzzleData }) !==\n\t\t\t\t\t\tJSON.stringify(instanceHistory[0].data);\n\t\t\t\tif (isNewData) {\n\t\t\t\t\tpuzzleHistory[puzzleId] = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: { puzzleId, ...puzzleData },\n\t\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...instanceHistory,\n\t\t\t\t\t];\n\t\t\t\t\tstudentHistory[puzzleName] = puzzleHistory;\n\t\t\t\t\tconst newHistory = new Map(oldHistory);\n\t\t\t\t\tnewHistory.set(student, studentHistory);\n\t\t\t\t\treturn newHistory;\n\t\t\t\t} else {\n\t\t\t\t\treturn oldHistory;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[setStudentHistory]\n\t);\n\n\tconst refresh = useCallback(async () => {\n\t\tconst dataUpdates = await Promise.all(\n\t\t\tactiveStudents.map(async (student) => {\n\t\t\t\tupdateHistory(student);\n\t\t\t\tconst data = await fetchStudentPuzzleData(student);\n\t\t\t\treturn [student, data];\n\t\t\t})\n\t\t);\n\t\tsetPuzzleData((oldPuzzleData) => {\n\t\t\tconst newPuzzleData = new Map(oldPuzzleData);\n\t\t\tdataUpdates.forEach((data) => newPuzzleData.set(...data));\n\t\t\treturn newPuzzleData;\n\t\t});\n\t\tconsole.log(\"refreshed\");\n\t}, [activeStudents, setPuzzleData, fetchStudentPuzzleData, updateHistory]);\n\n\t//refresh puzzle data\n\tuseEffect(() => {\n\t\trefresh();\n\t\tconst refreshInterval = setInterval(refresh, 1000);\n\t\treturn () => clearInterval(refreshInterval);\n\t}, [refresh]);\n\n\tconst setStudentFetchInfo = (student, key, value) => {\n\t\tconst info = { ...fetchInfo.get(student) };\n\t\tinfo[key] = value;\n\t\tif (key === \"puzzleName\") {\n\t\t\tinfo.puzzleId = props.puzzleDirectory[value][0];\n\t\t}\n\t\tconst newFetchInfo = new Map(fetchInfo);\n\t\tnewFetchInfo.set(student, info);\n\t\tsetFetchInfo(newFetchInfo);\n\t};\n\n\tconst renderStudentPuzzle = (student) => {\n\t\tconst { puzzleName, ...data } = puzzleData.get(student) || {};\n\t\tconst render = puzzleComponents[puzzleName];\n\t\treturn render ? render(data) : null;\n\t};\n\n\tconst renderHistory = (student) => {\n\t\tconst history = studentHistory.get(student);\n\t\tif (!history) return null;\n\t\tconst { first, last } = student;\n\t\tconst sortedHistory = Object.keys(history)\n\t\t\t.flatMap((key) =>\n\t\t\t\tObject.keys(history[key]).map((instanceKey) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdata: { puzzleId },\n\t\t\t\t\t\ttimestamp,\n\t\t\t\t\t} = history[key][instanceKey][0];\n\t\t\t\t\treturn { puzzleName: key, puzzleId, timestamp };\n\t\t\t\t})\n\t\t\t)\n\t\t\t.sort(({ timestamp: a }, { timestamp: b }) => (a > b ? -1 : 1));\n\t\treturn (\n\t\t\t<select\n\t\t\t\tname=\"history-select\"\n\t\t\t\tclassName=\"history-select\"\n\t\t\t\tid={`history-${first}-${last}`}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tconst { puzzleName, puzzleId } = JSON.parse(e.target.value);\n\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleName\", puzzleName);\n\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleId\", puzzleId);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{sortedHistory.map(({ puzzleName, puzzleId, timestamp }) => {\n\t\t\t\t\tconst time = new Date(timestamp).toLocaleTimeString();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tvalue={JSON.stringify({ puzzleName, puzzleId })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{puzzleId} {time}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</select>\n\t\t);\n\t};\n\n\tconst renderPuzzleSelect = (student) => {\n\t\tconst directory = props.puzzleDirectory;\n\t\tconst { puzzleName, puzzleId } = fetchInfo.get(student);\n\t\tconst ids = puzzleName ? directory[puzzleName] : [];\n\t\treturn (\n\t\t\t<div className=\"puzzle-select\">\n\t\t\t\t<select\n\t\t\t\t\tname=\"type-select\"\n\t\t\t\t\tid=\"type-select\"\n\t\t\t\t\tvalue={puzzleName}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetStudentFetchInfo(\n\t\t\t\t\t\t\tstudent,\n\t\t\t\t\t\t\t\"puzzleName\",\n\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{Object.keys(directory).map((type) => (\n\t\t\t\t\t\t<option value={type}>{type}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t<select\n\t\t\t\t\tname=\"instance-select\"\n\t\t\t\t\tid=\"instance-select\"\n\t\t\t\t\tvalue={puzzleId}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetStudentFetchInfo(student, \"puzzleId\", e.target.value)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{ids.map((id) => (\n\t\t\t\t\t\t<option value={id}>{id}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t{renderHistory(student)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst hasRecentActivity = (student) => {\n\t\tconst history = studentHistory.get(student) || {};\n\t\treturn Object.keys(history).some((key) =>\n\t\t\tObject.keys(history[key]).some((instanceKey) => {\n\t\t\t\tconst { timestamp } = history[key][instanceKey][0];\n\t\t\t\treturn Date.now() - timestamp < 60000;\n\t\t\t})\n\t\t);\n\t};\n\n\tconst renderStudentDisplay = (student) => {\n\t\tconst { first, last } = student;\n\t\tconst puzzleInfo = fetchInfo.get(student);\n\t\tconst activepuzzle = puzzleInfo ? puzzleInfo.activepuzzle : null;\n\t\treturn (\n\t\t\t<li key={`${first}_${last}`}>\n\t\t\t\t<div className=\"student-header\">\n\t\t\t\t\t<div className=\"student-name\">\n\t\t\t\t\t\t<span className=\"name\">\n\t\t\t\t\t\t\t{capitalize(first)} {capitalize(last)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"activity-indicator\">\n\t\t\t\t\t\t\t{hasRecentActivity(student) ? null : \"Inactive\"}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tShow Active Puzzle:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tname=\"active\"\n\t\t\t\t\t\t\tid={`${first}_${last}-active`}\n\t\t\t\t\t\t\tchecked={activepuzzle ? true : false}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\tsetStudentFetchInfo(\n\t\t\t\t\t\t\t\t\tstudent,\n\t\t\t\t\t\t\t\t\t\"activepuzzle\",\n\t\t\t\t\t\t\t\t\t!activepuzzle\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!activepuzzle ? renderPuzzleSelect(student) : null}\n\t\t\t\t</div>\n\t\t\t\t{renderStudentPuzzle(student)}\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"puzzle-display\">\n\t\t\t{activeStudents.map(renderStudentDisplay)}\n\t\t</ul>\n\t);\n}\n\nfunction capitalize(string) {\n\treturn string.replace(/^./, (char) => char.toUpperCase());\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport StudentList from \"./student-list\";\nimport PuzzleDisplay from \"./puzzle-display\";\n\nimport \"./stylesheets/index.css\";\n\nfunction App() {\n\tconst [students, setStudents] = useState([]);\n\tconst [puzzleDirectory, setPuzzleDirectory] = useState({\n\t\tcalcudoku: [],\n\t\tlogic: [],\n\t});\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tObject.keys(puzzleDirectory).map(async (puzzleName) => {\n\t\t\t\t\t\tconst instanceListUrl = `${process.env.REACT_APP_API_URL}/puzzles/${puzzleName}`;\n\t\t\t\t\t\tconst response = await fetch(instanceListUrl, {\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tauthorization:\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_INSTRUCTOR_PW,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tpuzzleDirectory[puzzleName] = (\n\t\t\t\t\t\t\t\tawait response.json()\n\t\t\t\t\t\t\t).map(({ instance }) => instance);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(`Http error: ${response.status}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tsetPuzzleDirectory({ ...puzzleDirectory });\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t})();\n\t}, []);\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<StudentList students={students} setStudents={setStudents} />\n\t\t\t<PuzzleDisplay\n\t\t\t\tstudents={students}\n\t\t\t\tpuzzleDirectory={puzzleDirectory}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n//---------\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}